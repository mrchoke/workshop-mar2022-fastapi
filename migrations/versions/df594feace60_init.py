"""init

Revision ID: df594feace60
Revises: 
Create Date: 2022-03-11 04:40:43.069895

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from sqlalchemy.schema import CreateSequence, Sequence, DropSequence

# revision identifiers, used by Alembic.
revision = 'df594feace60'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    op.execute(sa.text("CREATE EXTENSION IF NOT EXISTS \"uuid-ossp\";"))
    op.execute(
        sa.text("CREATE EXTENSION IF NOT EXISTS \"pg_trgm\" with schema pg_catalog;"))
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute(CreateSequence(Sequence('blog_id_seq')))
    op.create_table('blog',
                    sa.Column('id', sa.Integer(), server_default=sa.text(
                        "nextval('blog_id_seq')"), nullable=False),
                    sa.Column('title', sa.Unicode(length=255), nullable=False),
                    sa.Column('slug', sa.Unicode(length=255), nullable=True),
                    sa.Column('tags', postgresql.JSONB(astext_type=sa.Text()),
                              server_default=sa.text("'[]'::jsonb"), nullable=True),
                    sa.Column('blog', sa.Text(), nullable=False),
                    sa.Column('disabled', sa.Boolean(),
                              server_default=sa.text('False'), nullable=True),
                    sa.Column('created_at', sa.DateTime(timezone=True),
                              server_default=sa.text('now()'), nullable=True),
                    sa.Column('updated_at', sa.TIMESTAMP(timezone=True),
                              server_default=sa.text('now()'), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index('blog_idx', 'blog', ['blog'], unique=False, postgresql_ops={
                    'blog': 'gin_trgm_ops'}, postgresql_using='gin')
    op.create_index(op.f('ix_blog_slug'), 'blog', ['slug'], unique=False)
    op.create_index(op.f('ix_blog_title'), 'blog', ['title'], unique=False)
    op.create_index('title_idx', 'blog', ['title'], unique=False, postgresql_ops={
                    'title': 'gin_trgm_ops'}, postgresql_using='gin')

    op.execute(CreateSequence(Sequence('blog_stat_id_seq')))
    op.create_table('blog_click',
                    sa.Column('id', sa.BigInteger(), server_default=sa.text(
                        "nextval('blog_stat_id_seq')"), nullable=False),
                    sa.Column('created_at', sa.DateTime(timezone=True),
                              server_default=sa.text('now()'), nullable=True),
                    sa.Column('blog_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(
                        ['blog_id'], ['blog.id'], onupdate='CASCADE', ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_blog_click_blog_id'),
                    'blog_click', ['blog_id'], unique=False)
    op.execute(CreateSequence(Sequence('blog_star_id_seq')))
    op.create_table('blog_star',
                    sa.Column('id', sa.BigInteger(), server_default=sa.text(
                        "nextval('blog_star_id_seq')"), nullable=False),
                    sa.Column('star', sa.Integer(), nullable=False),
                    sa.Column('created_at', sa.DateTime(timezone=True),
                              server_default=sa.text('now()'), nullable=True),
                    sa.Column('blog_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(
                        ['blog_id'], ['blog.id'], onupdate='CASCADE', ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_blog_star_blog_id'),
                    'blog_star', ['blog_id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_blog_star_blog_id'), table_name='blog_star')
    op.drop_table('blog_star')
    op.drop_index(op.f('ix_blog_click_blog_id'), table_name='blog_click')
    op.drop_table('blog_click')
    op.drop_index('title_idx', table_name='blog', postgresql_ops={
                  'title': 'gin_trgm_ops'}, postgresql_using='gin')
    op.drop_index(op.f('ix_blog_title'), table_name='blog')
    op.drop_index(op.f('ix_blog_slug'), table_name='blog')
    op.drop_index('blog_idx', table_name='blog', postgresql_ops={
                  'blog': 'gin_trgm_ops'}, postgresql_using='gin')
    op.drop_table('blog')
    op.execute(DropSequence(Sequence('blog_id_seq')))
    op.execute(DropSequence(Sequence('blog_stat_id_seq')))
    op.execute(DropSequence(Sequence('blog_star_id_seq')))
    # ### end Alembic commands ###
